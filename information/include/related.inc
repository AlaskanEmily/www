<h2>Related Projects</h2>

Goedel is a logic programming language, with a strong type system,
module system, and support for infinite precision numerical calculation
and meta-programming facilities.
<ul>
<li> <a href = "http://www.cs.bris.ac.uk/~bowers/goedel.html">Goedel</a>
</ul>

Sisal is a high-performance portable parallel functional programming language.

<ul>
<li> <a href = "http://www.llnl.gov/sisal">Sisal</a>
</ul>

Clean is a general purpose, higher order, pure and lazy functional
programming language. It uses uniqueness types which are similar to
Mercury's unique modes, and allows programmers to build distributed
systems.

<ul>
<li> <a href = "http://www.cs.kun.nl/~clean">Clean</a>
</ul>

Haskell is a general purpose, higher order, pure and lazy functional
programming language.
This link reports on a project to translate a subset of Mercury
into Haskell.

<ul>
<li> <a href = "http://www.dcs.gla.ac.uk/~reidrm/project/root.html">Mercury to
Haskell</a>
</ul>

<p>
